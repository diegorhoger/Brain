{
  "identity": {
    "name": "Code Framework",
    "version": "2.0.0",
    "generated_at": "2025-07-01",
    "description": "This configuration defines the highest standards for microservice or multi-crate-based software. It merges elite engineering practices, cognitive clarity, emotional design, and symbolic architecture to produce the best code possible â€” modular, secure, scalable, expressive, and maintainable.",
    "target_profile": "Top 0.001% software engineers",
    "architecture_style": "Microservice / Multi-Crate Modular System",
    "language_support": ["Rust", "Go", "Python", "TypeScript", "C#", "Kotlin", "Swift"]
  },

  "modular_design": {
    "enforce_microservice_boundary": true,
    "crate_level_isolation": true,
    "shared_interfaces_only": true,
    "cross-crate_API_contracts": "OpenAPI, protobuf, or JSON Schema",
    "no_global_state": true,
    "build_independent_deployment": true
  },

  "crate_or_service_structure": {
    "types": ["core", "api", "infra", "domain", "cli", "utils", "integration"],
    "per_crate_standards": {
      "core": "business logic only, no I/O",
      "api": "expose REST/gRPC, clean routing",
      "infra": "external system adapters (DB, cache)",
      "utils": "pure helpers, no side-effects"
    }
  },

  "code_formatting": {
    "line_length": 100,
    "indentation": "4 spaces",
    "trailing_commas": true,
    "naming": {
      "structs_enums": "PascalCase",
      "functions": "snake_case",
      "constants": "SCREAMING_SNAKE_CASE"
    },
    "comments_required": true,
    "docstrings": "all public interfaces",
    "why_over_how_comments": true,
    "aesthetic_alignment": true,
    "cognitive_readability_first": true
  },

  "code_quality_rules": {
    "cyclomatic_complexity_max": 10,
    "cognitive_complexity_max": 15,
    "halstead_volume_max": 800,
    "maintainability_index_min": 75,
    "nesting_depth_max": 3,
    "function_length_max": 50,
    "file_length_max": 400,
    "avoid_large_services": true,
    "prefer_trait_based_interfaces": true,
    "no_duplicate_logic_across_crates": true,
    "comment_to_code_ratio_min": 0.1
  },

  "refactor_triggers": {
    "on_complexity_violation": true,
    "on_abstraction_drift": true,
    "on_comment_drift": true,
    "on_duplicate_logic": true,
    "on_code_churn_spike": true
  },

  "safety_rules": {
    "unwrap_or_expect_banned": true,
    "panic_free_production_code": true,
    "input_validation_required": true,
    "explicit_error_propagation_required": true,
    "no_hardcoded_config": true,
    "no_env_leakage": true,
    "no_unsafe_code_by_default": true
  },

  "testing_policy": {
    "unit_test_coverage_min": 90,
    "integration_tests_required": true,
    "contract_tests_between_services": true,
    "use_test_doubles_for_external_calls": true,
    "test_per_crate_or_service": true,
    "property_based_testing_encouraged": true,
    "mutation_testing_optional": true
  },

  "tooling": {
    "linting": {
      "Rust": ["clippy", "cargo fmt", "nextest", "tarpaulin"],
      "Go": ["golangci-lint"],
      "Python": ["ruff", "mypy", "black"],
      "JavaScript/TypeScript": ["eslint", "prettier", "vitest"]
    },
    "ci_per_service_or_crate": true,
    "complexity_analysis": true,
    "dependency_vulnerability_scan": true,
    "semantic_commit_analysis": true
  },

  "documentation": {
    "crate_readme_required": true,
    "public_api_docs_autogenerated": true,
    "openapi_contracts_if_rest": true,
    "proto_definitions_if_grpc": true,
    "changelogs_per_crate": true,
    "narrative_flow_documentation": true
  },

  "deployment": {
    "dockerized_per_service": true,
    "independent_versioning": true,
    "semantic_versioning": true,
    "env_file_isolated": true,
    "infrastructure_as_code": true,
    "chaos_testing_hooks_optional": true
  },

  "observability_policy": {
    "logs_for_all_failures": true,
    "traces_for_critical_paths": true,
    "metrics_for_performance_and_health": true,
    "debug_annotations": ["@debug", "@trace", "@perf"],
    "cognitive_tags": ["@emotion", "@purpose", "@risk", "@complexity"]
  },

  "symbolic_emotional_design": {
    "semantic_directory_labels": true,
    "emotional_polarity_metadata": true,
    "ritual_marker_comments": ["@begin", "@transform", "@conclude"],
    "code_should_read_like_story": true,
    "symbolic_clarity": true
  },

  "design_patterns": {
    "preferred": [
      "Functional Core / Imperative Shell",
      "Service-Oriented Boundaries",
      "Clean Architecture",
      "Hexagonal / Ports and Adapters",
      "CQRS and Event-Driven (for complex domains)",
      "Actor Model (for concurrency)"
    ],
    "anti_patterns": [
      "God Object or Service",
      "Spaghetti Code",
      "Copy/Paste Logic",
      "Magic Numbers or Strings",
      "Excessive Coupling Across Crates",
      "Business Logic in Controllers",
      "Shared Mutable State"
    ]
  },

  "emergent_qualities": {
    "team_onboarding_friendly": true,
    "legacy_immune": true,
    "emotionally_readable": true,
    "auditable_and_self_explaining": true,
    "code_can_self_reflect": true
  },

  "meta": {
    "preferred_repos": "multi-repo or nested workspaces only",
    "compliance_targets": [
      "OWASP Secure Coding",
      "NASA/JPL Rust Safety Rules",
      "ISO 25010 Maintainability & Understandability"
    ]
  }
}
