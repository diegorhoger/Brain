/* Brain AI Documentation Custom Styles */

/* Root variables for consistent theming */
:root {
    --brain-primary: #2563eb;
    --brain-secondary: #7c3aed;
    --brain-accent: #06b6d4;
    --brain-success: #10b981;
    --brain-warning: #f59e0b;
    --brain-error: #ef4444;
    --brain-gradient: linear-gradient(135deg, var(--brain-primary), var(--brain-secondary));
    --brain-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
}

/* Fix for inline style warnings - Replace inline styles with CSS classes */
.nav-wrapper {
    clear: both !important;
}

.nav-wrapper::after {
    content: "";
    display: table;
    clear: both;
}

/* Remove any inline styles that might be applied */
[style*="clear: both"] {
    clear: both !important;
}

/* Additional clearfix utilities */
.clearfix::after {
    content: "";
    display: table;
    clear: both;
}

.clear-both {
    clear: both !important;
}

/* Browser compatibility improvements */
/* Fallback for browsers that don't support theme-color meta tag */
@supports not (color: color(display-p3 1 1 1)) {
    /* Provide fallback styling for older browsers */
    body {
        background-color: #ffffff;
    }
}

/* Custom header styling */
.chapter-title {
    background: var(--brain-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    font-weight: 700;
}

/* Enhanced code blocks */
.hljs {
    border-radius: 8px;
    border-left: 4px solid var(--brain-primary);
    box-shadow: var(--brain-shadow);
}

/* API endpoint styling */
.api-endpoint {
    background: linear-gradient(90deg, #f8fafc, #e2e8f0);
    border: 1px solid #cbd5e0;
    border-radius: 6px;
    padding: 12px;
    margin: 16px 0;
    font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
}

.api-method {
    display: inline-block;
    padding: 4px 8px;
    border-radius: 4px;
    font-weight: 600;
    font-size: 12px;
    margin-right: 8px;
}

.api-method.get { background: #10b981; color: white; }
.api-method.post { background: #3b82f6; color: white; }
.api-method.put { background: #f59e0b; color: white; }
.api-method.delete { background: #ef4444; color: white; }

/* Status badges */
.status-badge {
    display: inline-block;
    padding: 2px 8px;
    border-radius: 12px;
    font-size: 12px;
    font-weight: 600;
    text-transform: uppercase;
}

.status-complete { background: #dcfce7; color: #166534; }
.status-progress { background: #fef3c7; color: #92400e; }
.status-pending { background: #e0e7ff; color: #3730a3; }

/* Enhanced tables */
table {
    border-collapse: collapse;
    width: 100%;
    margin: 16px 0;
    box-shadow: var(--brain-shadow);
    border-radius: 8px;
    overflow: hidden;
}

th {
    background: var(--brain-gradient);
    color: white;
    padding: 12px;
    text-align: left;
    font-weight: 600;
}

td {
    padding: 12px;
    border-bottom: 1px solid #e5e7eb;
}

tr:hover {
    background: #f9fafb;
}

/* Callout boxes */
.callout {
    padding: 16px;
    margin: 16px 0;
    border-radius: 8px;
    border-left: 4px solid;
}

.callout.info {
    background: #eff6ff;
    border-color: var(--brain-primary);
    color: #1e40af;
}

.callout.warning {
    background: #fffbeb;
    border-color: var(--brain-warning);
    color: #92400e;
}

.callout.success {
    background: #ecfdf5;
    border-color: var(--brain-success);
    color: #065f46;
}

.callout.error {
    background: #fef2f2;
    border-color: var(--brain-error);
    color: #991b1b;
}

/* Enhanced navigation */
.sidebar-scrollbox {
    background: linear-gradient(180deg, #f8fafc 0%, #f1f5f9 100%);
}

.chapter-item.expanded > .toggle {
    color: var(--brain-primary);
}

.chapter-item a:hover {
    background: var(--brain-gradient);
    color: white;
    border-radius: 4px;
}

/* Mermaid diagram enhancements */
.mermaid {
    text-align: center;
    margin: 24px 0;
    padding: 16px;
    background: #f8fafc;
    border-radius: 8px;
    border: 1px solid #e2e8f0;
}

/* Code copy button styling */
.copy-button {
    background: var(--brain-primary);
    color: white;
    border: none;
    border-radius: 4px;
    padding: 4px 8px;
    font-size: 12px;
    cursor: pointer;
    transition: all 0.2s;
}

.copy-button:hover {
    background: var(--brain-secondary);
    transform: translateY(-1px);
}

/* Search enhancements */
#searchresults {
    border-radius: 8px;
    box-shadow: var(--brain-shadow);
}

.search-result-header {
    background: var(--brain-gradient);
    color: white;
    padding: 8px 12px;
    border-radius: 4px 4px 0 0;
}

/* Responsive improvements */
@media (max-width: 768px) {
    .api-endpoint {
        font-size: 14px;
        padding: 8px;
    }
    
    table {
        font-size: 14px;
    }
    
    .callout {
        padding: 12px;
    }
}

/* Print styles */
@media print {
    .page {
        color: black;
    }
    
    .callout {
        border: 1px solid #ccc;
        page-break-inside: avoid;
    }
    
    /* Override all inline page break styles with CSS classes */
    div[style*="break-before: page"],
    div[style*="page-break-before: always"] {
        break-before: page !important;
        page-break-before: always !important;
    }
    
    div[style*="break-after: page"],
    div[style*="page-break-after: always"] {
        break-after: page !important;
        page-break-after: always !important;
    }
    
    div[style*="break-inside: avoid"],
    div[style*="page-break-inside: avoid"] {
        break-inside: avoid !important;
        page-break-inside: avoid !important;
    }
    
    /* Page break utility classes */
    .page-break-before {
        break-before: page !important;
        page-break-before: always !important;
    }
    
    .page-break-after {
        break-after: page !important;
        page-break-after: always !important;
    }
    
    .page-break-inside-avoid {
        break-inside: avoid !important;
        page-break-inside: avoid !important;
    }
}

/* General page break classes for both screen and print */
.page-break {
    break-before: page !important;
    page-break-before: always !important;
}

.page-break-avoid {
    break-inside: avoid !important;
    page-break-inside: avoid !important;
}

/* Global override for any div with page break inline styles */
div[style*="break-before"],
div[style*="page-break-before"],
div[style*="break-after"], 
div[style*="page-break-after"],
div[style*="break-inside"],
div[style*="page-break-inside"] {
    /* Remove the visual impact of inline styles while preserving functionality */
    display: block !important;
}

/* Ultra-specific override for the exact mdBook generated pattern */
div[style="break-before: page; page-break-before: always;"] {
    break-before: page !important;
    page-break-before: always !important;
}

div[style*="break-before: page; page-break-before: always"] {
    break-before: page !important;
    page-break-before: always !important;
}

/* Hide the element but preserve page break functionality */
@media screen {
    div[style*="break-before"],
    div[style*="page-break-before"] {
        display: none !important;
    }
}

/* Override all possible variations */
div[style^="break-before"],
div[style^="page-break-before"],
div[style^="break-after"],
div[style^="page-break-after"] {
    /* CSS takes precedence over inline styles when using !important */
    color: inherit !important;
    background: inherit !important;
    border: none !important;
    margin: 0 !important;
    padding: 0 !important;
}

/* Navy theme specific overrides */
.navy .chapter-title {
    background: linear-gradient(135deg, #64b5f6, #42a5f5);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
}

.navy .api-endpoint {
    background: linear-gradient(90deg, #263238, #37474f);
    border-color: #546e7a;
    color: #eceff1;
}

.navy .callout.info {
    background: #1a237e;
    border-color: #3f51b5;
    color: #c5cae9;
}

.navy th {
    background: linear-gradient(135deg, #1565c0, #1976d2);
}

.navy .mermaid {
    background: #263238;
    border-color: #546e7a;
} 